$(document).ready(function() {
	var matched, browser;
	 
    // Use of jQuery.browser is frowned upon.
    // More details: http://api.jquery.com/jQuery.browser
    // jQuery.uaMatch maintained for back-compat
    jQuery.uaMatch = function (ua) {
        ua = ua.toLowerCase();
 
        var match = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
            /(webkit)[ \/]([\w.]+)/.exec(ua) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
            /(msie) ([\w.]+)/.exec(ua) ||
            ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
            [];
 
        return {
            browser: match[1] || "",
            version: match[2] || "0"
        };
    };
 
    matched = jQuery.uaMatch(navigator.userAgent);
    browser = {};
 
    if (matched.browser) {
        browser[matched.browser] = true;
        browser.version = matched.version;
    }
 
    // Chrome is Webkit, but Webkit is also Safari.
    if (browser.chrome) {
        browser.webkit = true;
    } else if (browser.webkit) {
        browser.safari = true;
    }
 
    jQuery.browser = browser;
    
    $.datepicker.setDefaults({
		    dateFormat: 'yymmdd',
		    prevText: '이전 달',
		    nextText: '다음 달',
		    monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],
		    monthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],
		    dayNames: ['일','월','화','수','목','금','토'],
		    dayNamesShort: ['일','월','화','수','목','금','토'],
		    dayNamesMin: ['일','월','화','수','목','금','토'],
		    showMonthAfterYear: true,
		    changeMonth: true,
		    changeYear: true,
		    yearSuffix: '년'
    });
    
});


$.jQueryConfirm = function (titMsg,msg,okTxt,closeTxt,okCallback,closeCallback,nonameFnParamObj) {
    var $JConfirmMessageBox = $.parseHTML('<div id="JConfirmBox"></div>');
    $("body").append($JConfirmMessageBox);

    $($JConfirmMessageBox).dialog({
        open: $($JConfirmMessageBox).append(msg),
        title: titMsg,
        width: '315',
        autoOpen: true,
        modal: true,
        closeOnEscape: false,
        buttons: [{
		        	text: okTxt,
		            click: function() {
		            	$(this).dialog( "destroy" );
		            	$('#JConfirmBox').remove();
		            	if (typeof okCallback == 'function') {
		            		okCallback(nonameFnParamObj);
						}
		            }
        	       },
        	       {
   		        	text: closeTxt,
   		            click: function() {
   		            	$(this).dialog( "destroy" );
		            	$('#JConfirmBox').remove();
   		            	if (typeof closeCallback == 'function') {
   		            		closeCallback(nonameFnParamObj);
						}
   		            }
           	       } 
        	     ]
    });
};

$.jQueryAlert = function (titMsg,msg,okTxt,callback,nonameFnParamObj) {
    var $JAlertMessageBox = $.parseHTML('<div id="JAlertBox"></div>');
    $("body").append($JAlertMessageBox);

    $($JAlertMessageBox).dialog({
        open: $($JAlertMessageBox).append(msg),
        title: titMsg,
        width: '315',
        autoOpen: true,
        modal: true,
        closeOnEscape: false,
        buttons: [{
		        	text: okTxt,
		            click: function() {
		            	$(this).dialog( "destroy" );
		            	$('#JAlertBox').remove();
		            	if (typeof callback == 'function') {
		            		callback(nonameFnParamObj);
						}
		            }
        	       }
        	     ]
    });
};

// 밀리세컨드를 Date형식으로 변경 (yyyy-MM-dd HH:mm:ss)
function msToDate(item) {
	  var myDate = new Date(item);
	  
	  return myDate.getFullYear() + '-' +('0' + (myDate.getMonth()+1)).slice(-2)+ '-' +  myDate.getDate() + ' '+myDate.getHours()+ ':'+('0' + (myDate.getMinutes())).slice(-2)+ ':'+myDate.getSeconds();;
}



//전화번호 하이픈(-) 추가  함수
function phoneFomatter(num){

    var formatNum = '';

    if(num.length==11){
        formatNum = num.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
    }else if(num.length==8){
        formatNum = num.replace(/(\d{4})(\d{4})/, '$1-$2');
    }else{
        if(num.indexOf('02')==0){
            formatNum = num.replace(/(\d{2})(\d{4})(\d{4})/, '$1-$2-$3');
        }else{
        	formatNum = num.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
        }
    }
    return formatNum;
}


//생년월일 하이픈(-) 추가 함수
function birthFormat(item){
	
	var year = item.substring(0, 4);
	var month = item.substring(4, 6);
	var day = item.substring(6, 8);
	var sumBirth = year+'-'+month+'-'+day;
	return sumBirth;
}

//숫자 금액 표시 함수(콤마 추가)
function addComma(n) 
{
	 if(isNaN(n)){return 0;}
	  var reg = /(^[+-]?\d+)(\d{3})/;   
	  n += '';
	  while (reg.test(n))
	    n = n.replace(reg, '$1' + ',' + '$2');
	  return n;
}

//금액 콤마 제거 함수
function removeComma(input)
{
	
    var tmp = input.replace(/,/g,'');    
    return tmp;
}

//유효성 검사(숫자 및 알파벳 허용하는 Case)
function checkDataType(type , value) {

	var regType = "";
	
	if (type=='N') {
		regType = /^[0-9+]*$/;
	}else if (type=='NC') {     // 1.2 또는 12
		regType = /^[0-9]+(\.[0-9]+)?$/;
	}else if (type=='PNNC2') {   // 1.2 또는 12 또는 -1.2 또는 -12
		regType = /^-?[0-9]{1,2}(\.[0-9]{1,2})?$/;
	}else if (type=='AN') {     // 대문자 소문자 숫자만
		regType = /^[A-Za-z0-9+]*$/;
	}else if (type=='ANU') {     // 대문자 소문자 숫자 언더바만
		regType = /^[A-Za-z0-9_+]*$/;
	}else if (type=='AHN') {    // 대문자 소문자 한글 숫자만
		regType = /^[A-Za-zㄱ-ㅎㅏ-ㅣ가-힣0-9+]*$/;
	}else if (type=='IP') {     // ip만
		regType = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;
	}else if (type=='HP') {
		regType = /^((01[1|6|7|8|9])[1-9]+[0-9]{6,7})|(010[1-9][0-9]{7})$/;
	}else if (type=='TEL') {
		//regType = /^\d{2,3}\d{3,4}\d{4}$/;
		regType = /^(01[016789]{1}|070|02|0[3-9]{1}[0-9]{1})[0-9]{3,4}[0-9]{4}$/;
	}else if (type=='D') {
		return (dateValid(value));
	}
	else {
		return true;
	}
	return regType.test(value);
}

/**
 * 입력 값이 null or "" 일때 true를 반환한다.
 */
function isNull(str) {
	if ( null == str || "" == str){
		return true;
	}
	return false;
}

/**
 * 입력한 날짜의 유효성을 검사하여 유효한 경우 true를 반환한다.
 */
function dateValid(str){
	  if(!/^(\d){8}$/.test(str)) { return false;}
	  else {
		  var y = str.substr(0,4),
		    m = str.substr(4,2) - 1,
		    d = str.substr(6,2);
	    var D = new Date(y,m,d);
	    return (D.getFullYear() == y && D.getMonth() == m && D.getDate() == d) ?  D  : "";
	  }
}


/**
 * 휴대폰번호 검증 
 * 양식이 맞을 경우 문자열 반환 틀릴경우 null 반환
 * @param mdn
 * @returns
 */
function isMdn(mdn){
	
	mdn = addMdnHyphen(mdn);
	var mdnFormat=/^01[016789]-\d{3,4}-\d{4}$/g;
	return mdnFormat.exec(mdn);
}

/**
 * 휴대폰번호 '-'(하이픈) 추가
 * @param mdn
 */
function addMdnHyphen(mdn){
	if( 10 == mdn.length ){
		mdn = mdn.substring(0,3) + "-" + mdn.substring(3,6) + "-" + mdn.substring(6);
		return mdn;
	}
	
	if( 11 == mdn.length ){
		mdn = mdn.substring(0,3) + "-" + mdn.substring(3,7) + "-" + mdn.substring(7);
		return mdn;
	}
}

/**
 * 사업자 등록번호 '-'(하이픈) 추가
 * @param mdn
 */
function addOrgNumHyphen(mdn){
	mdn = mdn.replace(/-/g,'');
	if( 5 < mdn.length ){
		mdn = mdn.substring(0,3) + "-" + mdn.substring(3,5) + "-" + mdn.substring(5,mdn.length);
	}
	else if (5 >= mdn.length && mdn.length > 2){
		mdn = mdn.substring(0,3) + "-" + mdn.substring(3,mdn.length);
	}
	
	return mdn;
	
}


/**
 * 문자열을 바이트로 반환
 */
function getByteLength(str) {
	var byteLength = 0;
	for (var inx = 0; inx < str.length; inx++) {
		var oneChar = escape(str.charAt(inx));
	        if ( oneChar.length == 1 ) {
			byteLength ++;
		} else if (oneChar.indexOf("%u") != -1) {
			byteLength += 2;
		} else if (oneChar.indexOf("%") != -1) {
			byteLength += oneChar.length/3;
		}
	}
	return byteLength;
}

function getByteLengthSplit(elVal , len){
    
	var codeByte = 0;
	var msg = "";
    
    for (var idx = 0; idx < elVal.length; idx++) {
        var oneChar = escape(elVal.charAt(idx));
        if ( oneChar.length == 1 ) {
            codeByte ++;
        } else if (oneChar.indexOf("%u") != -1) {
            codeByte += 2;
        } else if (oneChar.indexOf("%") != -1) {
            codeByte ++;
        }
        
        if (len >= codeByte) {
        	msg = msg+elVal.charAt(idx);
        }
    }
    return msg;
}

//유효성 검사
function validate() {
	return validateForm();
}

function validateForm(el) {
	var result = true;
	
	if (!el) { el = 'body'; }else{ el = '#'+el ;}
	
	$(el+' :input').each(function() {
		
		if ( $(this).is(':radio')) {

			if( ($(el +" input:radio[name='"+$(this).attr('name')+"']").is(':checked') == false ) && $(this).attr('data_req') == 'true' ) {
				
				if ($(this).attr('data_alter_msg')) {
					//alert( $(this).attr('data_alter_msg') );
					$.jQueryAlert("알림",$(this).attr('data_alter_msg'),"확인", function(it){ it.focus();} , $(this));
				}
				else {
					//alert( "[ "+$(this).attr('data_msg') + ' ] 을(를) 선택하여 주십시요.');	
					$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 을(를) 선택하여 주십시요.","확인");
				}
				if(!$(this).prop('readonly') && ! $(this).prop('disabled') && $(this).prop('type')!='hidden' ) {
					$(this).focus();
				}
				result = false;
				return false;
			}
		}
		else if ( $(this).is(':checkbox')) {
			if( ($(el +" input:checkbox[name='"+$(this).attr('name')+"']").is(':checked') == false ) && $(this).attr('data_req') == 'true' ) {
				
				if ($(this).attr('data_alter_msg')) {
					$.jQueryAlert("알림",$(this).attr('data_alter_msg'),"확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
				}
				else {
					$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 을(를) 선택하여 주십시요.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
				}
				result = false;
				return false;
			}
		}
		else if ($(this).val()=='' && $(this).attr('data_req') == 'true' ) 
		{
			if ($(this).attr('data_alter_msg')) {
				$.jQueryAlert("알림",$(this).attr('data_alter_msg'),"확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
			}
			else {
				$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 을(를) 입력하여 주십시요.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
			}
			result = false;
			return false;
		}else {
			
			if ($(this).val()=='' && $(this).attr('data_req') == 'nemp') {
				return;
			}
			
			if ($(this).attr('data_type') && $(this).val()!='' ) {
				switch ($(this).attr('data_type')) {
				  case 'N'   : if (!checkDataType('N',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [숫자] 만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false; }  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [숫자] 만 입력가능합니다."); $(this).focus(); 
				    break;
				  case 'AN'  : if (!checkDataType('AN',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 및 영문자] 만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 및 영문자] 만 입력가능합니다."); $(this).focus();
				  	  break;
				  case 'ANU'  : if (!checkDataType('ANU',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 /영문자 및  _ ] 만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 /영문자 및  _ ] 만 입력가능합니다."); $(this).focus() ;
				  	break;
				  case 'D'   : if (!checkDataType('D',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) 유효한 일자가 아닙니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;} //  alert( "[ " + $(this).attr('data_msg') + " ] 는(은) 유효한 일자가 아닙니다."); $(this).focus() ;
				  	break;
				  case 'AHN' : if (!checkDataType('AHN',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 와 영문자 및 한글]만 입력이 가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [숫자 와 영문자 및 한글]만 입력이 가능합니다."); $(this).focus() ;
	  				break;
				  case 'NC'  : if (!checkDataType('NC',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [숫자] 또는 [숫자와 소수점]만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [숫자] 또는 [숫자와 소수점]만 입력가능합니다."); $(this).focus() ;
	                break;
				  case 'PNNC2'   : if (!checkDataType('PNNC2',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [양수/음수 숫자 2자리] 또는 [양수/음수의 숫자2자리 와 소수점 이하 2자리]만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [양수/음수 숫자 2자리] 또는 [양수/음수의 숫자2자리 와 소수점 이하 2자리]만 입력가능합니다."); $(this).focus() ;
	                break;
				  case 'IP'  : if (!checkDataType('IP',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) [IP주소]만 입력가능합니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}   // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) [IP주소]만 입력가능합니다."); $(this).focus() ;
				  	break;
				  case 'HP'  : if (!checkDataType('HP',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) 올바른 휴대폰번호가 아닙니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;}  // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) 올바른 휴대폰번호가 아닙니다."); $(this).focus() ;
				  	break;
				  case 'TEL' : if (!checkDataType('TEL',$(this).val())) { $.jQueryAlert("알림","[ " + $(this).attr('data_msg') + " ] 는(은) 올바른 전화번호가 아닙니다.","확인", function(it){ it.focus();} , $(this)); result = false; return false;} // alert( "[ " + $(this).attr('data_msg') + " ] 는(은) 올바른 전화번호가 아닙니다."); $(this).focus() ;
				  	break;
				  default    : '';
				    break;
				}
			}
			if ($(this).attr('data_max_length') && $(this).val()!='' ) {
				if (checkDataType('N',$(this).attr('data_max_length'))) {
					if ($(this).val().length > $(this).attr('data_max_length') ) {
						$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 은(는) 최대 " + $(this).attr('data_max_length') + "자리 까지만 입력 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
						result = false;
						return false;			
					}
					if ($(this).val() > $(this).attr('data_max_val') ) {
						$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 은(는) 최대 " + $(this).attr('data_max_val') + " 까지만 입력 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
						result = false;
						return false;			
					}
				}
				else{
					$.jQueryAlert("알림","데이터 길이는 숫자만 설정 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
					result = false;
					return false;
				}
			}
			if ($(this).attr('data_min_length') && $(this).val()!='' ) {
				if ( checkDataType('N',$(this).attr('data_min_length')) ) {
					if ($(this).val().length < $(this).attr('data_min_length') ) {
						$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 은(는) 최소 " + $(this).attr('data_min_length') + "자리 이상 입력 하여야 합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
						result = false;
						return false;			
					}
				}
				else{
					alert("데이터 길이는 숫자만 설정 가능합니다.");
					$.jQueryAlert("알림","데이터 길이는 숫자만 설정 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
					result = false;
					return false;
				}
			}
		}
	});

	if (result) {
		$(el+' select').each(function() {
			if ($(this).val()=='' && $(this).attr('data_req') == 'true') {
				if ($(this).attr('data_alter_msg')) {
					$.jQueryAlert("알림",$(this).attr('data_alter_msg'),"확인", function(it){it.focus();} , $(this));
				}
				else {
					$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 을(를) 선택하여 주십시요.","확인", function(it){it.focus();} , $(this));
				}
				result = false;
				return false;
			}
		});
	}
	if (result) {
		$(el+' textarea').each(function() {
			if ($(this).val()=='' && $(this).attr('data_req') == 'true') {
				if ($(this).attr('data_alter_msg')) {
					$.jQueryAlert("알림",$(this).attr('data_alter_msg'),"확인", function(it){ if(!it.prop('disabled') ) { it.focus(); } } , $(this));
				}
				else {
					$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 을(를) 입력하여 주십시요.","확인", function(it){ if(!it.prop('disabled') ) { it.focus(); } } , $(this));
				}
				
				result = false;
				return false;
			}
			if ($(this).attr('data_max_length') && $(this).val()!='' ) {
				if (checkDataType('N',$(this).attr('data_max_length'))) {
					if ($(this).val().length > $(this).attr('data_max_length') ) {
						$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 은(는) 최대 " + $(this).attr('data_max_length') + "자리 까지만 입력 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
						result = false;
						return false;			
					}
				}
				else{
					$.jQueryAlert("알림","데이터 길이는 숫자만 설정 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
					result = false;
					return false;
				}
			}
			if ($(this).attr('data_min_length') && $(this).val()!='' ) {
				if ( checkDataType('N',$(this).attr('data_min_length')) ) {
					if ($(this).val().length < $(this).attr('data_min_length') ) {
						$.jQueryAlert("알림","[ "+$(this).attr('data_msg') + " ] 은(는) 최소 " + $(this).attr('data_min_length') + "자리 이상 입력 하여야 합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
						result = false;
						return false;			
					}
				}
				else{
					$.jQueryAlert("알림","데이터 길이는 숫자만 설정 가능합니다.","확인", function(it){ if(!it.prop('readonly') && !it.prop('disabled') && it.prop('type')!='hidden' ) {it.focus();} } , $(this));
					result = false;
					return false;
				}
			}
		});
	}
	return result;
}

/**
 * 특정 길이까지만 문자열을 허용한다.
 * @param el 값을 체크할 object
 * @param disEl 안내문구를 표시할 object
 * @param len 길이
 */
function maxByteCheckAct(el , disEl , len) {
	var prodNameByte = getByteLength(el.val());
	disEl.html(prodNameByte);
	if(prodNameByte > len) {
		el.val( getByteLengthSplit(el.val() , len ) ) ;
		alert( len + 'Byte까지 입력 가능합니다.');
		disEl.html(getByteLength(el.val()));
	}
}

/**
 * 랜덤문자열 생성
 * @returns {String}
 */
function randomString() {
	var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
	var string_length = 15;
	var randomstring = '';
	for (var i=0; i<string_length; i++) {
		var rnum = Math.floor(Math.random() * chars.length);
		randomstring += chars.substring(rnum,rnum+1);
	}
	return randomstring;
}
 
/**
 * 파일 필드를 리셋한다.
 */
fileFieldReset = function(it){
	if ($.browser.msie) {
		// ie 일때 input[type=file] init.
		it.replaceWith( it.clone(true) );
	} else {
		// other browser 일때 input[type=file] init.
		it.val("");
	}
};




/**
 * json 방식의 Ajax통신.
 * @param url
 * @param jsondata
 * @param processFn
 */
jsonAjax = function (url , jsondata , processFn , failFn) {
	
	if (undefined == failFn) {
		failFn = function(XMLHttpRequest, textStatus, errorThrown){
			  alert("시스템 오류가 발생되었습니다."); 
	     }
	};
	
	$.ajax({
		url : url
	   , data : jsondata     
	   , type : "POST"
	   , dataType : "JSON"
	   , async : false
	   , cache : false
	   , success : processFn
	   , error : failFn
	});	
}


/**
 * json 방식의 Ajax통신.
 * @param url
 * @param jsondata
 * @param processFn
 */
htmlAjax = function (url , jsondata , processFn) {
	
	$.ajax({
		url : url
	   , data : jsondata     
	   , type : "POST"
	   , async : false
	   , cache : false
	   , success : processFn
	   , error : function(XMLHttpRequest, textStatus, errorThrown){
		   		   alert(textStatus);
		   		   alert(errorThrown);
				   alert("시스템 오류가 발생되었습니다."); 
			     }
	});	
}

/**
 * Select 의 Option을 리셋한다.
 * @param obj
 * @param defaultTxt
 * @param defaultVal
 */
resetOption = function (obj , defaultTxt , defaultVal) {
	obj.find('option').remove();
	obj.append($('<option>', {value : defaultVal , text : defaultTxt}));
}

/**
 * Select 의 Option을 추가생성 한다.
 * @param obj
 * @param jsonList
 * @param keyTxt
 * @param valueTxt
 */
createOption = function (obj , jsonList ,  keyTxt , valueTxt) {

	$.each(jsonList, function (i, item){
		obj.append($('<option>', {
			value : eval('item.'+keyTxt ) ,	text : eval('item.'+valueTxt )
		}));
	});
}




    //날짜 유효성검사
    // 사용법 : isValidDate('2014-11-31')
	// 결과 : 정상 ==> true , 실패 ==> false
     function isValidDate(param) {
        try
        {
            param = param.replace(/-/g,'');
 
            // 자리수가 맞지않을때
            if( isNaN(param) || param.length!=8 ) {
                return false;
            }
             
            var year = Number(param.substring(0, 4));
            var month = Number(param.substring(4, 6));
            var day = Number(param.substring(6, 8));
 
            var dd = day / 0;
 
             
            if( month<1 || month>12 ) {
                return false;
            }
             
            var maxDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            var maxDay = maxDaysInMonth[month-1];
             
            // 윤년 체크
            if( month==2 && ( year%4==0 && year%100!=0 || year%400==0 ) ) {
                maxDay = 29;
            }
             
            if( day<=0 || day>maxDay ) {
                return false;
            }
            return true;
 
        } catch (err) {
            return false;
        }                       
    }


/*비밀번호체크*/
function chekPassword(userId , userPwd)
{
		// 영문,숫자,특수문자
		var check = /^(?=.*[a-zA-Z])(?=.*[~!@#$%^&*()])(?=.*[0-9]).{8,16}$/.test(userPwd);
		
		if (userId=='') {
			return '9'
		}
		
		//if(!(check1||check2||check3)){
		if(!check){
			//alert("사용할 수 없은 조합입니다.\n패스워드 설정안내를 확인해 주세요.");
			return '1'
		}
		else if(/(\w)\1\1/.test(userPwd)){
//			alert('같은 문자를 3번 이상 사용하실 수 없습니다.\n패스워드 설정안내를 확인해 주세요.');
			return '2'
		}
		else if(userPwd.search(userId)>-1){
//			alert("비밀번호에 아이디가 포함되었습니다.\n패스워드 설정안내를 확인해 주세요.");
			return '3'
		}
		else {
			return '0'
		}
 }




function excelView( fileUpload , targetDiv ) {
	 // showLoadingBar();

  //Validate whether File is valid Excel file.
  // 한글+영문+숫자+특수문자가 제목으로 가능하도록.
  var regex = /^([a-zA-Zㄱ-ㅎㅏ-ㅣ가-힣0-9\{\}\[\]\/?.,;:|\)*~`!^\-_+<>@\#$%&\\\=\(\'\"])+(.xls|.xlsx)$/;  
  if (regex.test(fileUpload.value.toLowerCase())) {
      if (typeof (FileReader) != "undefined") {
          var reader = new FileReader();

          //For Browsers other than IE.
          if (reader.readAsBinaryString) {
              reader.onload = function (e) {
                  ProcessExcel(e.target.result , targetDiv );
                  
              };
              reader.readAsBinaryString(fileUpload.files[0]);
              
          } else {
              //For IE Browser.
              reader.onload = function (e) {
                  var data = "";
                  var bytes = new Uint8Array(e.target.result);
                  for (var i = 0; i < bytes.byteLength; i++) {
                      data += String.fromCharCode(bytes[i]);
                  }

                  ProcessExcel(data , targetDiv );
               	
               	// showLoadingBar();
              };
            reader.readAsArrayBuffer(fileUpload.files[0]);
          }
      } else {
          alert("This browser does not support HTML5.");
      }
  } else {
      alert("엑셀파일명이 잘못되었습니다.\n엑셀파일명은 한글,영문,숫자,특수문자만 허용됩니다.\n허용특수문자 : `~!@#$%^&*()-_+=[]{};:'\"<>,./?");
  }
};

function ProcessExcel(data , targetDiv ) {
	$('#dvExcel').show();
	//Read the Excel File data.
   var workbook = XLSX.read(data, { type: 'binary' });

   //Fetch the name of First Sheet.
	// var opts = {};
	var opts = {'header': '', 'footer': '' };
	
	var ary = XLSX.utils.sheet_to_html(workbook.Sheets[workbook.SheetNames[0]], opts , 1000 ); // html 과 엑셀의 행 갯수 를 리턴해줌
	$('#'+targetDiv).html(ary[1].join(''));     
}

function excelViewReset( targetDiv ) {
	$('#'+targetDiv).html("");
}


function loading_start(el) {
	el.loading({
        theme: "dark",
        message: "처리중입니다...",
        zIndex:"9999999",
        backbround:"#dddddd"
    });
}

function loading_stop(el) {
	setTimeout(function(){
		el.loading('destroy');
	}, 500);
}


function loading_start2(callbackFn, callbackFnArg) {
	var $LoadingBox = $.parseHTML("<div class=\"loading-overlay loading-theme-dark loading-shown\" style=\"position: fixed; z-index: 9999999; top: 0px; left: 0px; width: 100%; height: 100%;\" id=\"body_loading-overlay\"><div class=\"loading-overlay-content\">처리중입니다...</div></div>");
    $("body").append($LoadingBox);
    setTimeout(callbackFn , 200 , callbackFnArg);
}

function loading_stop2() {
	$("body div").remove("#body_loading-overlay");
}